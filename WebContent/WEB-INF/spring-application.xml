<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
						   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
						   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
						   http://www.springframework.org/schema/security
						   http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<context:component-scan base-package="ec.com.webapplication" />
	<context:annotation-config/>
    <!-- <context:spring-configured/> -->
	<!--  <context:property-placeholder location="classpath:persistence-mysql.properties" />  -->
	
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages"></property>
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		  p:location="/WEB-INF/jdbc.properties">
	</bean>
    
    <!-- Declaración de orígenes de datos. Soporta SQL Server, MySQL, AS400-->
	<bean id="DataSource" class="${jdbc.classDataSource}" destroy-method="close"
		  p:driverClass="${jdbc.driverClassName}"
		  p:jdbcUrl="${jdbc.databaseurl}"
		  p:user="${jdbc.username}"
		  p:password="${jdbc.password}">
    </bean>
	
    <!-- Declaración de Session Factory -->
    <bean id="SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="DataSource" />
        <property name="mappingResources">
        <list>
            <value>hibernate.cfg.xml</value>
        </list>
        </property>
        <property name="annotatedClasses">
			<list>
				<value>org.hibernate.cfg.AnnotationConfiguration</value>
                <value>ec.com.webapplication.model.Login</value>
                <value>ec.com.webapplication.model.Clientes</value>  
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props> 
        </property>
    </bean>
    
    
    <!-- Declaración de los Beans -->
	<bean id="Login" class="ec.com.webapplication.model.Login" />
	<bean id="Cliente" class="ec.com.webapplication.model.Clientes" />
	
	<!-- ********************************* LOGIN *********************************** -->
	<!-- User Service Declaration -->
	<bean id="LoginService" class="ec.com.webapplication.service.impl.LoginService">
		<property name="loginDAO" ref="LoginDAO" />
	</bean>
	 <!-- User DAO Declaration -->
	<bean id="LoginDAO" class="ec.com.webapplication.dao.impl.LoginDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	
	<!-- ******************************** CLIENTE ********************************** -->
	<!-- Cliente Service Declaration -->
	<bean id="ClienteService" class="ec.com.webapplication.service.impl.ClienteService" >
		<property name="clienteDAO" ref="ClienteDAO" />
	</bean>  
	<!-- Cliente DAO Declaration -->
	<bean id="ClienteDAO" class="ec.com.webapplication.dao.impl.ClienteDAO" >
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>  
	
	
	<!-- Se define Transaction Manager -->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
       <property name="sessionFactory" ref="SessionFactory"/>
    </bean>
    
	<!-- Habilita la configuración del comportamiento transaccional basado en anotaciones -->
	<tx:annotation-driven transaction-manager="txManager"/>
</beans>